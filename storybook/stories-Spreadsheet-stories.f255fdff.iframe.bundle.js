"use strict";(self.webpackChunkreact_spreadsheet=self.webpackChunkreact_spreadsheet||[]).push([[417],{"./node_modules/@storybook/builder-webpack5/node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[6].use[1]!./src/Spreadsheet.css":(module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Z:()=>__WEBPACK_DEFAULT_EXPORT__});var _node_modules_storybook_builder_webpack5_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@storybook/builder-webpack5/node_modules/css-loader/dist/runtime/sourceMaps.js"),_node_modules_storybook_builder_webpack5_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(_node_modules_storybook_builder_webpack5_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__),_node_modules_storybook_builder_webpack5_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@storybook/builder-webpack5/node_modules/css-loader/dist/runtime/api.js"),___CSS_LOADER_EXPORT___=__webpack_require__.n(_node_modules_storybook_builder_webpack5_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__)()(_node_modules_storybook_builder_webpack5_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default());___CSS_LOADER_EXPORT___.push([module.id,".Spreadsheet {\n  --background-color: white;\n  --text-color: black;\n  --readonly-text-color: rgb(0 0 0 / 40%);\n  --outline-color: #4285f4;\n  --outline-background-color: rgb(160 195 255 / 20%);\n  --border-color: hsl(2deg 0% 91%);\n  --header-background-color: rgb(0 0 0 / 4%);\n  --elevation: 0 2px 5px rgb(0 0 0 / 40%);\n\n  position: relative;\n  overflow: visible;\n  background: var(--background-color);\n  color: var(--text-color);\n  display: inline-block;\n}\n\n.Spreadsheet--dark-mode {\n  --background-color: black;\n  --text-color: white;\n  --readonly-text-color: rgb(255 255 255 / 40%);\n  --header-background-color: rgb(255 255 255 / 4%);\n  --border-color: hsl(2deg 0% 19%);\n}\n\n.Spreadsheet__active-cell {\n  position: absolute;\n  border: 2px solid var(--outline-color);\n  box-sizing: border-box;\n}\n\n.Spreadsheet__active-cell--edit {\n  background: var(--background-color);\n  box-shadow: var(--elevation);\n}\n\n.Spreadsheet__table {\n  border-collapse: collapse;\n  table-layout: fixed;\n}\n\n.Spreadsheet__cell,\n.Spreadsheet__active-cell {\n  cursor: cell;\n}\n\n.Spreadsheet__cell {\n  outline: none;\n}\n\n.Spreadsheet__cell--readonly {\n  color: var(--readonly-text-color);\n}\n\n.Spreadsheet__cell,\n.Spreadsheet__header {\n  min-width: 6em;\n  min-height: 1.9em;\n  height: 1.9em;\n  max-height: 1.9em;\n  border: 1px solid var(--border-color);\n  overflow: hidden;\n  word-break: keep-all;\n  white-space: nowrap;\n  text-align: left;\n  box-sizing: border-box;\n  user-select: none;\n}\n\n.Spreadsheet__header {\n  background: var(--header-background-color);\n  color: var(--readonly-text-color);\n  text-align: center;\n  font: inherit;\n}\n\n.Spreadsheet__header--selected {\n  background: #5f6268;\n  color: #fff;\n}\n\n.Spreadsheet__header,\n.Spreadsheet__data-viewer,\n.Spreadsheet__data-editor input {\n  padding: 4px;\n  box-sizing: border-box;\n}\n\n.Spreadsheet__data-viewer--preserve-breaks {\n  white-space: pre-wrap;\n}\n\n.Spreadsheet__data-editor,\n.Spreadsheet__data-editor input {\n  width: 100%;\n  height: 100%;\n}\n\n.Spreadsheet__data-editor input {\n  font: inherit;\n  color: inherit;\n  background: none;\n  border: none;\n  outline: none;\n  margin: 0;\n}\n\n.Spreadsheet__data-viewer--boolean {\n  text-align: center;\n}\n\n.Spreadsheet__floating-rect {\n  position: absolute;\n  pointer-events: none;\n  box-sizing: border-box;\n}\n\n.Spreadsheet__floating-rect--hidden {\n  display: none;\n}\n\n.Spreadsheet__floating-rect--selected {\n  background: var(--outline-background-color);\n  border: 2px var(--outline-color) solid;\n}\n\n.Spreadsheet__floating-rect--dragging {\n  border: none;\n}\n\n.Spreadsheet__floating-rect--copied {\n  border: 2px var(--outline-color) dashed;\n}\n","",{version:3,sources:["webpack://./src/Spreadsheet.css"],names:[],mappings:"AAAA;EACE,yBAAyB;EACzB,mBAAmB;EACnB,uCAAuC;EACvC,wBAAwB;EACxB,kDAAkD;EAClD,gCAAgC;EAChC,0CAA0C;EAC1C,uCAAuC;;EAEvC,kBAAkB;EAClB,iBAAiB;EACjB,mCAAmC;EACnC,wBAAwB;EACxB,qBAAqB;AACvB;;AAEA;EACE,yBAAyB;EACzB,mBAAmB;EACnB,6CAA6C;EAC7C,gDAAgD;EAChD,gCAAgC;AAClC;;AAEA;EACE,kBAAkB;EAClB,sCAAsC;EACtC,sBAAsB;AACxB;;AAEA;EACE,mCAAmC;EACnC,4BAA4B;AAC9B;;AAEA;EACE,yBAAyB;EACzB,mBAAmB;AACrB;;AAEA;;EAEE,YAAY;AACd;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,iCAAiC;AACnC;;AAEA;;EAEE,cAAc;EACd,iBAAiB;EACjB,aAAa;EACb,iBAAiB;EACjB,qCAAqC;EACrC,gBAAgB;EAChB,oBAAoB;EACpB,mBAAmB;EACnB,gBAAgB;EAChB,sBAAsB;EACtB,iBAAiB;AACnB;;AAEA;EACE,0CAA0C;EAC1C,iCAAiC;EACjC,kBAAkB;EAClB,aAAa;AACf;;AAEA;EACE,mBAAmB;EACnB,WAAW;AACb;;AAEA;;;EAGE,YAAY;EACZ,sBAAsB;AACxB;;AAEA;EACE,qBAAqB;AACvB;;AAEA;;EAEE,WAAW;EACX,YAAY;AACd;;AAEA;EACE,aAAa;EACb,cAAc;EACd,gBAAgB;EAChB,YAAY;EACZ,aAAa;EACb,SAAS;AACX;;AAEA;EACE,kBAAkB;AACpB;;AAEA;EACE,kBAAkB;EAClB,oBAAoB;EACpB,sBAAsB;AACxB;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,2CAA2C;EAC3C,sCAAsC;AACxC;;AAEA;EACE,YAAY;AACd;;AAEA;EACE,uCAAuC;AACzC",sourcesContent:[".Spreadsheet {\n  --background-color: white;\n  --text-color: black;\n  --readonly-text-color: rgb(0 0 0 / 40%);\n  --outline-color: #4285f4;\n  --outline-background-color: rgb(160 195 255 / 20%);\n  --border-color: hsl(2deg 0% 91%);\n  --header-background-color: rgb(0 0 0 / 4%);\n  --elevation: 0 2px 5px rgb(0 0 0 / 40%);\n\n  position: relative;\n  overflow: visible;\n  background: var(--background-color);\n  color: var(--text-color);\n  display: inline-block;\n}\n\n.Spreadsheet--dark-mode {\n  --background-color: black;\n  --text-color: white;\n  --readonly-text-color: rgb(255 255 255 / 40%);\n  --header-background-color: rgb(255 255 255 / 4%);\n  --border-color: hsl(2deg 0% 19%);\n}\n\n.Spreadsheet__active-cell {\n  position: absolute;\n  border: 2px solid var(--outline-color);\n  box-sizing: border-box;\n}\n\n.Spreadsheet__active-cell--edit {\n  background: var(--background-color);\n  box-shadow: var(--elevation);\n}\n\n.Spreadsheet__table {\n  border-collapse: collapse;\n  table-layout: fixed;\n}\n\n.Spreadsheet__cell,\n.Spreadsheet__active-cell {\n  cursor: cell;\n}\n\n.Spreadsheet__cell {\n  outline: none;\n}\n\n.Spreadsheet__cell--readonly {\n  color: var(--readonly-text-color);\n}\n\n.Spreadsheet__cell,\n.Spreadsheet__header {\n  min-width: 6em;\n  min-height: 1.9em;\n  height: 1.9em;\n  max-height: 1.9em;\n  border: 1px solid var(--border-color);\n  overflow: hidden;\n  word-break: keep-all;\n  white-space: nowrap;\n  text-align: left;\n  box-sizing: border-box;\n  user-select: none;\n}\n\n.Spreadsheet__header {\n  background: var(--header-background-color);\n  color: var(--readonly-text-color);\n  text-align: center;\n  font: inherit;\n}\n\n.Spreadsheet__header--selected {\n  background: #5f6268;\n  color: #fff;\n}\n\n.Spreadsheet__header,\n.Spreadsheet__data-viewer,\n.Spreadsheet__data-editor input {\n  padding: 4px;\n  box-sizing: border-box;\n}\n\n.Spreadsheet__data-viewer--preserve-breaks {\n  white-space: pre-wrap;\n}\n\n.Spreadsheet__data-editor,\n.Spreadsheet__data-editor input {\n  width: 100%;\n  height: 100%;\n}\n\n.Spreadsheet__data-editor input {\n  font: inherit;\n  color: inherit;\n  background: none;\n  border: none;\n  outline: none;\n  margin: 0;\n}\n\n.Spreadsheet__data-viewer--boolean {\n  text-align: center;\n}\n\n.Spreadsheet__floating-rect {\n  position: absolute;\n  pointer-events: none;\n  box-sizing: border-box;\n}\n\n.Spreadsheet__floating-rect--hidden {\n  display: none;\n}\n\n.Spreadsheet__floating-rect--selected {\n  background: var(--outline-background-color);\n  border: 2px var(--outline-color) solid;\n}\n\n.Spreadsheet__floating-rect--dragging {\n  border: none;\n}\n\n.Spreadsheet__floating-rect--copied {\n  border: 2px var(--outline-color) dashed;\n}\n"],sourceRoot:""}]);const __WEBPACK_DEFAULT_EXPORT__=___CSS_LOADER_EXPORT___},"./src/stories/Spreadsheet.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Basic:()=>Basic,Controlled:()=>Controlled,ControlledActivation:()=>ControlledActivation,ControlledSelection:()=>ControlledSelection,CustomColumnLabels:()=>CustomColumnLabels,CustomRowLabels:()=>CustomRowLabels,DarkMode:()=>DarkMode,Filter:()=>Filter,HideIndicators:()=>HideIndicators,RangeCell:()=>RangeCell,Readonly:()=>Readonly,WithAsyncCellData:()=>WithAsyncCellData,WithCornerIndicator:()=>WithCornerIndicator,WithCustomCell:()=>WithCustomCell,WithSelectCell:()=>WithSelectCell,__namedExportsOrder:()=>__namedExportsOrder,default:()=>Spreadsheet_stories});var react=__webpack_require__("./node_modules/react/index.js"),classnames=__webpack_require__("./node_modules/classnames/index.js"),classnames_default=__webpack_require__.n(classnames);function actions_setData(data){return{type:"SET_DATA",payload:{data}}}function actions_setCreateFormulaParser(createFormulaParser){return{type:"SET_CREATE_FORMULA_PARSER",payload:{createFormulaParser}}}function actions_setSelection(selection){return{type:"SET_SELECTION",payload:{selection}}}function actions_activate(point){return{type:"ACTIVATE",payload:{point}}}function actions_setCellData(active,data){return{type:"SET_CELL_DATA",payload:{active,data}}}function actions_paste(data){return{type:"PASTE",payload:{data}}}function keyPress(event){return{type:"KEY_PRESS",payload:{event}}}function keyDown(event){return{type:"KEY_DOWN",payload:{event}}}function dragStart(){return{type:"DRAG_START"}}function dragEnd(){return{type:"DRAG_END"}}function actions_copy(){return{type:"COPY"}}function actions_cut(){return{type:"CUT"}}function actions_blur(){return{type:"BLUR"}}function createEmpty(rows,columns){const matrix=Array(rows);for(let i=0;i<rows;i++)matrix[i]=Array(columns);return matrix}function get(point,matrix){const columns=matrix[point.row];if(void 0!==columns)return columns[point.column]}function slice(startPoint,endPoint,matrix){const sliced=[],columns=endPoint.column-startPoint.column;for(let row=startPoint.row;row<=endPoint.row;row++){const slicedRow=row-startPoint.row;sliced[slicedRow]=sliced[slicedRow]||Array(columns);for(let column=startPoint.column;column<=endPoint.column;column++)sliced[slicedRow][column-startPoint.column]=get({row,column},matrix)}return sliced}function set(point,value,matrix){const nextMatrix=[...matrix],firstRow=matrix[0],nextFirstRow=firstRow?[...firstRow]:[];nextFirstRow.length-1<point.column&&(nextFirstRow[point.column]=void 0,nextMatrix[0]=nextFirstRow);const nextRow=matrix[point.row]?[...matrix[point.row]]:[];return nextRow[point.column]=value,nextMatrix[point.row]=nextRow,nextMatrix}function mutableSet(point,value,matrix){let firstRow=matrix[0];firstRow||(firstRow=[],matrix[0]=firstRow),point.row in matrix||(matrix[point.row]=[]),point.column in firstRow||(firstRow[point.column]=void 0),matrix[point.row][point.column]=value}function unset(point,matrix){if(!has(point,matrix))return matrix;const nextMatrix=[...matrix],nextRow=[...matrix[point.row]];return nextRow[point.column]=void 0,nextMatrix[point.row]=nextRow,nextMatrix}function*matrix_entries(matrix){for(const[row,values]of matrix.entries())for(const[column,value]of values.entries()){const point={row,column};yield[point,value]}}function has(point,matrix){const firstRow=matrix[0];return firstRow&&point.row>=0&&point.column>=0&&Number.isInteger(point.row)&&Number.isInteger(point.column)&&point.column<firstRow.length&&point.row<matrix.length}function getSize(matrix){return{columns:getColumnsCount(matrix),rows:getRowsCount(matrix)}}function getRowsCount(matrix){return matrix.length}function getColumnsCount(matrix){const firstRow=matrix[0];return firstRow?firstRow.length:0}function matrix_maxPoint(matrix){const size=getSize(matrix);return{row:size.rows-1,column:size.columns-1}}class PointRange{start;end;constructor(source,target){this.start={row:Math.min(source.row,target.row),column:Math.min(source.column,target.column)},this.end={row:Math.max(source.row,target.row),column:Math.max(source.column,target.column)}}*[Symbol.iterator](){for(let row=this.start.row;row<=this.end.row;row++)for(let column=this.start.column;column<=this.end.column;column++)yield{row,column}}size(){return(this.end.row+1-this.start.row)*(this.end.column+1-this.start.column)}has(point){return point.row>=this.start.row&&point.column>=this.start.column&&point.row<=this.end.row&&point.column<=this.end.column}mask(mask){return new PointRange({row:mask.start.row>this.start.row?mask.start.row:this.start.row,column:mask.start.column>this.start.column?mask.start.column:this.start.column},{row:mask.end.row<this.end.row?mask.end.row:this.end.row,column:mask.end.column<this.end.column?mask.end.column:this.end.column})}equals(range){return this.start.row===range.start.row&&this.start.column===range.start.column&&this.end.row===range.end.row&&this.end.column===range.end.column}}const ORIGIN={row:0,column:0};class Selection{}class EmptySelection extends Selection{toRange(data){return null}normalizeTo(data){return this}hasEntireRow(row){return!1}hasEntireColumn(column){return!1}size(){return 0}has(){return!1}equals(selection){return selection instanceof EmptySelection}}class RangeSelection extends Selection{range;constructor(range){super(),this.range=range}toRange(data){return this.range}normalizeTo(data){const dataRange=getMatrixRange(data);return new RangeSelection(this.range.mask(dataRange))}hasEntireRow(row){return!1}hasEntireColumn(column){return!1}size(data){const range=this.toRange(data);return range?range.size():0}has(data,point){const range=this.toRange(data);return null!==range&&range.has(point)}equals(selection){return selection instanceof RangeSelection&&this.range.equals(selection.range)}}class EntireSelection extends Selection{}class EntireWorksheetSelection extends EntireSelection{toRange(data){return getMatrixRange(data)}normalizeTo(data){return this}hasEntireColumn(column){return!0}hasEntireRow(row){return!0}size(data){return getColumnsCount(data)*getRowsCount(data)}has(data,point){return!0}equals(selection){return selection instanceof EntireWorksheetSelection}}class EntireAxisSelection extends EntireSelection{start;end;constructor(start,end){if(!isIndex(start))throw new InvalidIndexError("start");if(!isIndex(end))throw new InvalidIndexError("end");super(),this.start=Math.min(start,end),this.end=Math.max(start,end)}equals(selection){return selection instanceof EntireAxisSelection&&this.constructor===selection.constructor&&this.start===selection.start&&this.end===selection.end}}class EntireRowsSelection extends EntireAxisSelection{toRange(data){const max=matrix_maxPoint(data);return new PointRange({row:this.start,column:0},{row:this.end,column:max.column})}normalizeTo(data){const count=getRowsCount(data);return new EntireRowsSelection(Math.max(this.start,0),Math.min(this.end,count-1))}hasEntireRow(row){return row>=this.start&&row<=this.end}hasEntireColumn(column){return!1}size(data){return(this.end-this.start+1)*getColumnsCount(data)}has(data,point){return point.row>=this.start&&point.row<=this.end}}class EntireColumnsSelection extends EntireAxisSelection{toRange(data){const max=matrix_maxPoint(data);return new PointRange({row:0,column:this.start},{row:max.row,column:this.end})}normalizeTo(data){const count=getColumnsCount(data);return new EntireColumnsSelection(Math.max(this.start,0),Math.min(this.end,count-1))}hasEntireRow(row){return!1}hasEntireColumn(column){return column>=this.start&&column<=this.end}size(data){return(this.end-this.start+1)*getRowsCount(data)}has(data,point){return point.column>=this.start&&point.column<=this.end}}function getMatrixRange(data){const maxPoint=matrix_maxPoint(data);return new PointRange(ORIGIN,maxPoint)}function isIndex(value){return Number.isInteger(value)&&value>=0}class InvalidIndexError extends Error{constructor(name){super(`${name} is not a valid index. It must be 0 or a positive integer`)}}const FOCUS_WITHIN_SELECTOR=":focus-within";function range(end,start=0,step=1){const array=[];if(-1===Math.sign(end-start)){for(let element=start;element>end;element-=step)array.push(element);return array}for(let element=start;element<end;element+=step)array.push(element);return array}function isActive(active,point){return Boolean(active&&function isEqual(source,target){return source.column===target.column&&source.row===target.row}(point,active))}function getOffsetRect(element){return{width:element.offsetWidth,height:element.offsetHeight,left:element.offsetLeft,top:element.offsetTop}}function getCellDimensions(point,rowDimensions,columnDimensions){const cellRowDimensions=rowDimensions&&rowDimensions[point.row],cellColumnDimensions=columnDimensions&&columnDimensions[point.column];return cellRowDimensions&&cellColumnDimensions&&{...cellRowDimensions,...cellColumnDimensions}}function getRangeDimensions(rowDimensions,columnDimensions,range){const startDimensions=getCellDimensions(range.start,rowDimensions,columnDimensions),endDimensions=getCellDimensions(range.end,rowDimensions,columnDimensions);return startDimensions&&endDimensions&&{width:endDimensions.left+endDimensions.width-startDimensions.left,height:endDimensions.top+endDimensions.height-startDimensions.top,top:startDimensions.top,left:startDimensions.left}}function getCSV(data){return function join(matrix,horizontalSeparator="\t",verticalSeparator="\n"){let joined="";const{rows,columns}=getSize(matrix);for(let row=0;row<rows;row++){row&&(joined+=verticalSeparator);for(let column=0;column<columns;column++)column&&(joined+=horizontalSeparator),matrix[row]&&column in matrix[row]&&(joined+=String(matrix[row][column]))}return joined}(function map(func,matrix){const newMatrix=[];for(const[point,value]of matrix_entries(matrix))mutableSet(point,func(value,point),newMatrix);return newMatrix}((cell=>cell?.value||""),data))}function shouldHandleClipboardEvent(root,mode){return null!==root&&"view"===mode&&isFocusedWithin(root)}function isFocusedWithin(element){return element.matches(FOCUS_WITHIN_SELECTOR)}function hasLineBreaker(value){return"string"==typeof value&&value.includes("\n")}var fast_formula_parser=__webpack_require__("./node_modules/fast-formula-parser/index.js"),fast_formula_parser_default=__webpack_require__.n(fast_formula_parser);function point_hash_toString(point){return`${point.row},${point.column}`}function fromString(point){const[row,column]=point.split(",");return{row:Number(row),column:Number(column)}}class PointSet{set;constructor(set){this.set=set}static from(points){const set=new Set;for(const point of points)set.add(point_hash_toString(point));return new PointSet(set)}has(point){return this.set.has(point_hash_toString(point))}get size(){return this.set.size}add(point){const newSet=new Set(this.set);return newSet.add(point_hash_toString(point)),new PointSet(newSet)}delete(point){const newSet=new Set(this.set);return newSet.delete(point_hash_toString(point))?new PointSet(newSet):this}difference(other){let newSet=this;for(const point of other)newSet=newSet.delete(point);return newSet}union(other){let newSet=this;for(const point of other)newSet=newSet.add(point);return newSet}*[Symbol.iterator](){for(const value of this.set)yield fromString(value)}}const FORMULA_VALUE_PREFIX="=";function isFormulaValue(value){return"string"==typeof value&&value.startsWith(FORMULA_VALUE_PREFIX)&&value.length>1}function extractFormula(value){return value.slice(1)}function createFormulaParser(data,config){return new(fast_formula_parser_default())({...config,onCell:ref=>{const cell=get({row:ref.row-1,column:ref.col-1},data);return isNaN(cell?.value)?cell?.value:Number(cell?.value)},onRange:ref=>{const size=getSize(data);return function toArray(matrix,transform){const array=[];for(let row=0;row<matrix.length;row++)for(let column=0;column<matrix[row].length;column++){const value=matrix[row][column];array.push(transform?transform(value,{row,column}):value)}return array}(slice({row:ref.from.row-1,column:ref.from.col-1},{row:Math.min(ref.to.row-1,size.rows-1),column:Math.min(ref.to.col-1,size.columns-1)},data),(cell=>isNaN(cell?.value)?cell?.value:Number(cell?.value)))}})}const depParser=new fast_formula_parser.DepParser;function getReferences(formula,point,data){const{rows,columns}=getSize(data);try{const dependencies=depParser.parse(formula,convertPointToCellRef(point)),references=PointSet.from(dependencies.flatMap((reference=>{if("from"in reference){const{from,to}=reference,normalizedFrom={row:from.row-1,column:from.col-1},normalizedTo={row:Math.min(to.row-1,rows-1),column:Math.min(to.col-1,columns-1)},range=new PointRange(normalizedFrom,normalizedTo);return Array.from(range)}return{row:reference.row-1,column:reference.col-1}})));return references}catch(error){if(error instanceof fast_formula_parser.FormulaError)return PointSet.from([]);throw error}}function convertPointToCellRef(point){return{row:point.row+1,col:point.column+1,sheet:"Sheet1"}}class PointGraph{forwards;constructor(forwards=new Map){this.forwards=forwards}static from(pairs){const forwards=new Map;for(const[node,edges]of pairs)forwards.set(point_hash_toString(node),edges);return new PointGraph(forwards)}set(node,edges){const newGraph=new PointGraph(new Map(this.forwards));return 0===edges.size?(newGraph.forwards.delete(point_hash_toString(node)),newGraph):(newGraph.forwards.set(point_hash_toString(node),edges),newGraph)}get(node){return this.forwards.get(point_hash_toString(node))||PointSet.from([])}getBackwards(node){let result=PointSet.from([]);for(const[key,value]of this.forwards)value.has(node)&&(result=result.add(fromString(key)));return result}getBackwardsRecursive(node,visited=PointSet.from([])){let result=this.getBackwards(node),newVisited=visited;for(const point of result)newVisited.has(point)||(newVisited=newVisited.add(point),result=result.union(this.getBackwardsRecursive(point,newVisited)));return result}hasCircularDependency(startPoint){let visited=PointSet.from([]);const stack=[startPoint];for(;stack.length>0;){const current=stack.pop();if(!current)continue;if(visited.has(current))return!0;visited=visited.add(current);const dependents=this.get(current);if(dependents)for(const dependent of dependents)stack.push(dependent)}return!1}*[Symbol.iterator](){const visitedHashes=new Set;for(const[key,values]of this.forwards){const point=fromString(key);visitedHashes.add(key),yield[point,values];for(const value of values){const hash=point_hash_toString(value);visitedHashes.has(hash)||this.forwards.has(hash)||(visitedHashes.add(hash),yield[value,PointSet.from([])])}}}*traverseBFSBackwards(){let visited=PointSet.from([]);const queue=[];for(const[point,values]of this)0===values.size&&(visited=visited.add(point),queue.push(point));for(;queue.length>0;){const point=queue.shift();if(!point)continue;yield point;const dependents=this.getBackwards(point);if(0!==dependents.size)for(const dependent of dependents)visited.has(dependent)||0!==this.get(dependent).difference(visited).size||(queue.push(dependent),visited=visited.add(dependent))}}}class Model{data;evaluatedData;referenceGraph;createFormulaParser;constructor(createFormulaParser,data,referenceGraph,evaluatedData){this.createFormulaParser=createFormulaParser,this.data=data,this.referenceGraph=referenceGraph||function createReferenceGraph(data){const entries=[];for(const[point,cell]of matrix_entries(data))if(cell&&isFormulaValue(cell.value)){const references=getReferences(extractFormula(cell.value),point,data);entries.push([point,references])}return PointGraph.from(entries)}(data),this.evaluatedData=evaluatedData||function createEvaluatedData(data,referenceGraph,createFormulaParser){let evaluatedData=data,formulaParser=createFormulaParser(evaluatedData);for(const point of referenceGraph.traverseBFSBackwards()){const cell=get(point,data);if(cell&&isFormulaValue(cell.value)){const evaluatedValue=getFormulaComputedValue(cell.value,point,formulaParser);evaluatedData=set(point,{...cell,value:evaluatedValue},evaluatedData),formulaParser=createFormulaParser(evaluatedData)}}return evaluatedData}(data,this.referenceGraph,this.createFormulaParser)}}function updateCellValue(model,point,cell){const nextData=set(point,cell,model.data),nextReferenceGraph=isFormulaValue(cell.value)?function updateReferenceGraph(referenceGraph,point,cell,data){const references=getReferences(extractFormula(cell.value),point,data),nextReferenceGraph=referenceGraph.set(point,references);return nextReferenceGraph}(model.referenceGraph,point,cell,nextData):model.referenceGraph,formulaParser=model.createFormulaParser(nextData),nextEvaluatedData=function evaluateCell(prevEvaluatedData,data,referenceGraph,point,cell,formulaParser){if(referenceGraph.hasCircularDependency(point)){let visited=PointSet.from([point]),nextEvaluatedData=set(point,{...cell,value:fast_formula_parser.FormulaError.REF},prevEvaluatedData);for(const referrer of referenceGraph.getBackwardsRecursive(point)){if(visited.has(referrer))break;visited=visited.add(referrer);const referrerCell=get(referrer,data);referrerCell&&(nextEvaluatedData=set(referrer,{...referrerCell,value:fast_formula_parser.FormulaError.REF},nextEvaluatedData))}return nextEvaluatedData}let nextEvaluatedData=prevEvaluatedData;const evaluatedValue=isFormulaValue(cell.value)?getFormulaComputedValue(cell.value,point,formulaParser):cell.value,evaluatedCell={...cell,value:evaluatedValue};nextEvaluatedData=set(point,evaluatedCell,nextEvaluatedData);for(const referrer of referenceGraph.getBackwardsRecursive(point)){const referrerCell=get(referrer,data);if(!referrerCell)continue;const evaluatedValue=isFormulaValue(referrerCell.value)?getFormulaComputedValue(referrerCell.value,point,formulaParser):referrerCell.value;nextEvaluatedData=set(referrer,{...referrerCell,value:evaluatedValue},nextEvaluatedData)}return nextEvaluatedData}(model.evaluatedData,nextData,nextReferenceGraph,point,cell,formulaParser);return new Model(model.createFormulaParser,nextData,nextReferenceGraph,nextEvaluatedData)}function getFormulaComputedValue(value,point,formulaParser){const formula=extractFormula(value);try{return function evaluate(formula,point,formulaParser){try{const position=convertPointToCellRef(point),returned=formulaParser.parse(formula,position);return returned instanceof fast_formula_parser.FormulaError?returned.toString():returned}catch(error){if(error instanceof fast_formula_parser.FormulaError)return error.toString();throw error}}(formula,point,formulaParser)}catch(e){return fast_formula_parser.FormulaError.REF}}const INITIAL_STATE={active:null,mode:"view",rowDimensions:{},columnDimensions:{},lastChanged:null,hasPasted:!1,cut:!1,dragging:!1,model:new Model(createFormulaParser,[]),selected:new EmptySelection,copied:null,lastCommit:null};function reducer(state,action){switch(action.type){case"SET_DATA":{const{data}=action.payload,nextActive=state.active&&has(state.active,data)?state.active:null,nextSelected=state.selected.normalizeTo(data);return{...state,model:new Model(state.model.createFormulaParser,data),active:nextActive,selected:nextSelected}}case"SET_CREATE_FORMULA_PARSER":{const{createFormulaParser}=action.payload;return{...state,model:new Model(createFormulaParser,state.model.data)}}case"SELECT_ENTIRE_ROW":{const{row,extend}=action.payload,{active}=state;return{...state,selected:new EntireRowsSelection(extend&&active?active.row:row,row),active:extend&&active?active:{...ORIGIN,row},mode:"view"}}case"SELECT_ENTIRE_COLUMN":{const{column,extend}=action.payload,{active}=state;return{...state,selected:new EntireColumnsSelection(extend&&active?active.column:column,column),active:extend&&active?active:{...ORIGIN,column},mode:"view"}}case"SELECT_ENTIRE_WORKSHEET":return{...state,selected:new EntireWorksheetSelection,active:ORIGIN,mode:"view"};case"SET_SELECTION":{const{selection}=action.payload,range=selection.toRange(state.model.data),active=state.active&&selection.has(state.model.data,state.active)?state.active:range?.start;return{...state,selected:selection,active:active||null,mode:"view"}}case"SELECT":{const{point}=action.payload;return state.active&&!isActive(state.active,point)?{...state,selected:new RangeSelection(new PointRange(point,state.active)),mode:"view"}:state}case"ACTIVATE":{const{point}=action.payload;return{...state,selected:new RangeSelection(new PointRange(point,point)),active:point,mode:isActive(state.active,point)?"edit":"view"}}case"SET_CELL_DATA":{const{active,data:cellData}=action.payload;return isActiveReadOnly(state)?state:{...state,model:updateCellValue(state.model,active,cellData),lastChanged:active}}case"SET_CELL_DIMENSIONS":{const{point,dimensions}=action.payload,prevRowDimensions=state.rowDimensions[point.row],prevColumnDimensions=state.columnDimensions[point.column];return prevRowDimensions&&prevColumnDimensions&&prevRowDimensions.top===dimensions.top&&prevRowDimensions.height===dimensions.height&&prevColumnDimensions.left===dimensions.left&&prevColumnDimensions.width===dimensions.width?state:{...state,rowDimensions:{...state.rowDimensions,[point.row]:{top:dimensions.top,height:dimensions.height}},columnDimensions:{...state.columnDimensions,[point.column]:{left:dimensions.left,width:dimensions.width}}}}case"COPY":case"CUT":{const selectedRange=state.selected.toRange(state.model.data);return{...state,copied:selectedRange,cut:"CUT"===action.type,hasPasted:!1}}case"PASTE":{const{data:text}=action.payload,{active}=state;if(!active)return state;const copied=function split(csv,transform,horizontalSeparator="\t",verticalSeparator=/\r\n|\n|\r/){return csv.replace(/"([^"]*?)"/g,((match,p1)=>p1.replace(/\n/g,"\\n"))).split(verticalSeparator).map((row=>row.split(horizontalSeparator).map((line=>line.replace(/\\n/g,"\n"))).map(transform)))}(text,(value=>({value}))),copiedSize=getSize(copied),selectedRange=state.selected.toRange(state.model.data);if(selectedRange&&1===copiedSize.rows&&1===copiedSize.columns){const cell=get({row:0,column:0},copied);let newData=state.cut&&state.copied?unset(state.copied.start,state.model.data):state.model.data;const commit=[];for(const point of selectedRange||[]){const currentCell=get(point,state.model.data);commit.push({prevCell:currentCell||null,nextCell:cell||null}),newData=set(point,cell,newData)}return{...state,model:new Model(createFormulaParser,newData),copied:null,cut:!1,hasPasted:!0,mode:"view",lastCommit:commit}}const requiredSize={rows:active.row+copiedSize.rows,columns:active.column+copiedSize.columns},paddedData=function pad(matrix,size){const{rows,columns}=getSize(matrix);if(rows>=size.rows&&columns>=size.columns)return matrix;const resultSize={rows:size.rows>rows?size.rows:rows,columns:size.columns>columns?size.columns:columns};let padded=[...matrix];if(resultSize.columns>columns){const padColumns=resultSize.columns-columns;padded=padded.map((row=>[...row,...Array(padColumns).fill(void 0)]))}if(resultSize.rows>rows){const padRows=resultSize.rows-rows,emptyRow=Array(resultSize.columns).fill(void 0);padded=[...padded,...Array(padRows).fill(emptyRow)]}return padded}(state.model.data,requiredSize);let acc={data:paddedData,commit:[]};for(const[point,cell]of matrix_entries(copied)){let commit=acc.commit||[];const nextPoint={row:point.row+active.row,column:point.column+active.column};let nextData=acc.data;if(state.cut){if(state.copied){nextData=unset({row:point.row+state.copied.start.row,column:point.column+state.copied.start.column},acc.data)}commit=[...commit,{prevCell:cell||null,nextCell:null}]}has(nextPoint,paddedData)||(acc={data:nextData,commit});const currentCell=get(nextPoint,nextData)||null;commit=[...commit,{prevCell:currentCell,nextCell:cell||null}],acc.data=set(nextPoint,{value:void 0,...currentCell,...cell},nextData),acc.commit=commit}return{...state,model:new Model(createFormulaParser,acc.data),selected:new RangeSelection(new PointRange(active,{row:active.row+copiedSize.rows-1,column:active.column+copiedSize.columns-1})),copied:null,cut:!1,hasPasted:!0,mode:"view",lastCommit:acc.commit}}case"EDIT":return edit(state);case"VIEW":return view(state);case"CLEAR":return reducer_clear(state);case"BLUR":return reducer_blur(state);case"KEY_PRESS":{const{event}=action.payload;if(isActiveReadOnly(state)||event.metaKey)return state;if("view"===state.mode&&state.active){const selectedRange=state.selected.toRange(state.model.data);return 1===selectedRange?.size()?edit(reducer_clear(state)):edit(state)}return state}case"KEY_DOWN":{const{event}=action.payload,handler=getKeyDownHandler(state,event);return handler?{...state,...handler(state,event)}:state}case"DRAG_START":return{...state,dragging:!0};case"DRAG_END":return{...state,dragging:!1};case"COMMIT":{const{changes}=action.payload;return{...state,...commit(changes)}}default:throw new Error("Unknown action")}}function edit(state){return isActiveReadOnly(state)?state:{...state,mode:"edit"}}function reducer_clear(state){if(!state.active)return state;const clearCell=cell=>(cell=>cell&&!cell.readOnly)(cell)?Object.assign({},cell,{value:void 0}):cell,selectedRange=state.selected.toRange(state.model.data),changes=[];let newData=state.model.data;for(const point of selectedRange||[]){const cell=get(point,state.model.data),clearedCell=clearCell(cell);changes.push({prevCell:cell||null,nextCell:clearedCell||null}),newData=set(point,clearedCell,newData)}return{...state,model:new Model(createFormulaParser,newData),...commit(changes)}}function reducer_blur(state){return{...state,active:null,selected:new EmptySelection}}function view(state){return{...state,mode:"view"}}function commit(changes){return{lastCommit:changes}}const go=(rowDelta,columnDelta)=>state=>{if(!state.active)return;const size=getSize(state.model.data),shouldWrap=state.active.column+columnDelta>=size.columns,nextActive={row:state.active.row+rowDelta+(shouldWrap?1:0),column:(state.active.column+columnDelta)%size.columns};return has(nextActive,state.model.data)?{...state,active:nextActive,selected:new RangeSelection(new PointRange(nextActive,nextActive)),mode:"view"}:{...state,mode:"view"}},keyDownHandlers={ArrowUp:go(-1,0),ArrowDown:go(1,0),ArrowLeft:go(0,-1),ArrowRight:go(0,1),Tab:go(0,1),Enter:edit,Backspace:reducer_clear,Delete:reducer_clear,Escape:reducer_blur},editKeyDownHandlers={Escape:view,Tab:keyDownHandlers.Tab,Enter:keyDownHandlers.ArrowDown},editShiftKeyDownHandlers={Tab:go(0,-1)};const shiftKeyDownHandlers={ArrowUp:state=>({...state,selected:modifyEdge(state.selected,state.active,state.model.data,"Top")}),ArrowDown:state=>({...state,selected:modifyEdge(state.selected,state.active,state.model.data,"Bottom")}),ArrowLeft:state=>({...state,selected:modifyEdge(state.selected,state.active,state.model.data,"Left")}),ArrowRight:state=>({...state,selected:modifyEdge(state.selected,state.active,state.model.data,"Right")}),Tab:go(0,-1)},shiftMetaKeyDownHandlers={},metaKeyDownHandlers={};function getKeyDownHandler(state,event){const{key}=event;let handlers;return handlers="edit"===state.mode?event.shiftKey?editShiftKeyDownHandlers:editKeyDownHandlers:event.shiftKey&&event.metaKey?shiftMetaKeyDownHandlers:event.shiftKey?shiftKeyDownHandlers:event.metaKey?metaKeyDownHandlers:keyDownHandlers,handlers[key]}function isActiveReadOnly(state){const activeCell=function getActive(state){const activeCell=state.active&&get(state.active,state.model.data);return activeCell||null}(state);return Boolean(activeCell?.readOnly)}function modifyEdge(selection,active,data,direction){if(!active)return selection;if(selection instanceof RangeSelection){const nextSelection=function modifyRangeSelectionEdge(rangeSelection,active,data,edge){const field="Left"===edge||"Right"===edge?"column":"row",key="Left"===edge||"Top"===edge?"start":"end",delta="start"===key?-1:1,edgeOffsets=rangeSelection.range.has({...active,[field]:active[field]+-1*delta}),keyToModify=edgeOffsets?"start"===key?"end":"start":key,nextRange=new PointRange(rangeSelection.range.start,rangeSelection.range.end);nextRange[keyToModify][field]+=delta;const nextSelection=new RangeSelection(nextRange).normalizeTo(data);return nextSelection}(selection,active,data,direction);return nextSelection}return selection instanceof EntireColumnsSelection?function modifyEntireColumnsSelection(selection,active,data,edge){if("Top"===edge||"Bottom"===edge)return selection;const delta="Left"===edge?-1:1,property="Left"===edge?"start":"end",oppositeProperty="start"===property?"end":"start",newSelectionData={...selection};("Left"===edge?selection.end>active.row:selection.start<active.row)?newSelectionData[oppositeProperty]=selection[oppositeProperty]+delta:newSelectionData[property]=selection[property]+delta;return new EntireColumnsSelection(Math.max(newSelectionData.start,0),Math.max(newSelectionData.end,0)).normalizeTo(data)}(selection,active,data,direction):selection instanceof EntireRowsSelection?function modifyEntireRowsSelection(selection,active,data,edge){if("Left"===edge||"Right"===edge)return selection;const delta="Top"===edge?-1:1,property="Top"===edge?"start":"end",oppositeProperty="start"===property?"end":"start",newSelectionData={...selection};("Top"===edge?selection.end>active.row:selection.start<active.row)?newSelectionData[oppositeProperty]=selection[oppositeProperty]+delta:newSelectionData[property]=selection[property]+delta;return new EntireRowsSelection(Math.max(newSelectionData.start,0),Math.max(newSelectionData.end,0)).normalizeTo(data)}(selection,active,data,direction):selection}var dist=__webpack_require__("./node_modules/use-context-selector/dist/index.js");const src_context=(0,dist.kr)([INITIAL_STATE,()=>{}]),src_Table=({children,columns,hideColumnIndicators})=>{const columnNodes=range(columns+(hideColumnIndicators?0:1)).map((i=>react.createElement("col",{key:i})));return react.createElement("table",{className:"Spreadsheet__table"},react.createElement("colgroup",null,columnNodes),react.createElement("tbody",null,children))};try{TableComponent.displayName="TableComponent",TableComponent.__docgenInfo={description:"Type of the Spreadsheet Table component",displayName:"TableComponent",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/Table.tsx#TableComponent"]={docgenInfo:TableComponent.__docgenInfo,name:"TableComponent",path:"src/Table.tsx#TableComponent"})}catch(__react_docgen_typescript_loader_error){}const src_Row=props=>react.createElement("tr",props);try{RowComponent.displayName="RowComponent",RowComponent.__docgenInfo={description:"Type of the Row component",displayName:"RowComponent",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/Row.tsx#RowComponent"]={docgenInfo:RowComponent.__docgenInfo,name:"RowComponent",path:"src/Row.tsx#RowComponent"})}catch(__react_docgen_typescript_loader_error){}const src_HeaderRow=props=>react.createElement("tr",props);try{HeaderRowComponent.displayName="HeaderRowComponent",HeaderRowComponent.__docgenInfo={description:"Type of the HeaderRow component",displayName:"HeaderRowComponent",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/HeaderRow.tsx#HeaderRowComponent"]={docgenInfo:HeaderRowComponent.__docgenInfo,name:"HeaderRowComponent",path:"src/HeaderRow.tsx#HeaderRowComponent"})}catch(__react_docgen_typescript_loader_error){}const use_dispatch=function useDispatch(){return(0,dist.Sz)(src_context,(([state,dispatch])=>dispatch))};const use_selector=function useSelector(selector){return(0,dist.Sz)(src_context,(([state])=>selector(state)))},src_CornerIndicator=({selected,onSelect})=>{const handleClick=react.useCallback((()=>{onSelect()}),[onSelect]);return react.createElement("th",{className:classnames_default()("Spreadsheet__header",{"Spreadsheet__header--selected":selected}),onClick:handleClick,tabIndex:0})},enhance=CornerIndicatorComponent=>function CornerIndicatorWrapper(props){const dispatch=use_dispatch(),selectEntireWorksheet=react.useCallback((()=>dispatch({type:"SELECT_ENTIRE_WORKSHEET"})),[dispatch]),selected=use_selector((state=>state.selected instanceof EntireWorksheetSelection));return react.createElement(CornerIndicatorComponent,{...props,selected,onSelect:selectEntireWorksheet})};try{CornerIndicatorComponent.displayName="CornerIndicatorComponent",CornerIndicatorComponent.__docgenInfo={description:"Type of the CornerIndicator component",displayName:"CornerIndicatorComponent",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/CornerIndicator.tsx#CornerIndicatorComponent"]={docgenInfo:CornerIndicatorComponent.__docgenInfo,name:"CornerIndicatorComponent",path:"src/CornerIndicator.tsx#CornerIndicatorComponent"})}catch(__react_docgen_typescript_loader_error){}try{enhance.displayName="enhance",enhance.__docgenInfo={description:"",displayName:"enhance",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/CornerIndicator.tsx#enhance"]={docgenInfo:enhance.__docgenInfo,name:"enhance",path:"src/CornerIndicator.tsx#enhance"})}catch(__react_docgen_typescript_loader_error){}const src_ColumnIndicator=({column,label,selected,onSelect})=>{const handleClick=react.useCallback((event=>{onSelect(column,event.shiftKey)}),[onSelect,column]);return react.createElement("th",{className:classnames_default()("Spreadsheet__header",{"Spreadsheet__header--selected":selected}),onClick:handleClick,tabIndex:0},void 0!==label?label:function columnIndexToLabel(column){let label="",index=column;for(;index>=0;)label=String.fromCharCode(65+index%26)+label,index=Math.floor(index/26)-1;return label}(column))},ColumnIndicator_enhance=ColumnIndicatorComponent=>function ColumnIndicatorWrapper(props){const dispatch=use_dispatch(),selectEntireColumn=react.useCallback(((column,extend)=>dispatch(function actions_selectEntireColumn(column,extend){return{type:"SELECT_ENTIRE_COLUMN",payload:{column,extend}}}(column,extend))),[dispatch]),selected=use_selector((state=>state.selected.hasEntireColumn(props.column)));return react.createElement(ColumnIndicatorComponent,{...props,selected,onSelect:selectEntireColumn})};try{ColumnIndicatorComponent.displayName="ColumnIndicatorComponent",ColumnIndicatorComponent.__docgenInfo={description:"Type of the ColumnIndicator component",displayName:"ColumnIndicatorComponent",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/ColumnIndicator.tsx#ColumnIndicatorComponent"]={docgenInfo:ColumnIndicatorComponent.__docgenInfo,name:"ColumnIndicatorComponent",path:"src/ColumnIndicator.tsx#ColumnIndicatorComponent"})}catch(__react_docgen_typescript_loader_error){}try{ColumnIndicator_enhance.displayName="enhance",ColumnIndicator_enhance.__docgenInfo={description:"",displayName:"enhance",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/ColumnIndicator.tsx#enhance"]={docgenInfo:ColumnIndicator_enhance.__docgenInfo,name:"enhance",path:"src/ColumnIndicator.tsx#enhance"})}catch(__react_docgen_typescript_loader_error){}const src_RowIndicator=({row,label,selected,onSelect})=>{const handleClick=react.useCallback((event=>{onSelect(row,event.shiftKey)}),[onSelect,row]);return react.createElement("th",{className:classnames_default()("Spreadsheet__header",{"Spreadsheet__header--selected":selected}),onClick:handleClick,tabIndex:0},void 0!==label?label:row+1)},RowIndicator_enhance=RowIndicatorComponent=>function RowIndicatorWrapper(props){const dispatch=use_dispatch(),selected=use_selector((state=>state.selected.hasEntireRow(props.row))),selectEntireRow=react.useCallback(((row,extend)=>dispatch(function actions_selectEntireRow(row,extend){return{type:"SELECT_ENTIRE_ROW",payload:{row,extend}}}(row,extend))),[dispatch]);return react.createElement(RowIndicatorComponent,{...props,selected,onSelect:selectEntireRow})};try{RowIndicatorComponent.displayName="RowIndicatorComponent",RowIndicatorComponent.__docgenInfo={description:"Type of the RowIndicator component",displayName:"RowIndicatorComponent",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/RowIndicator.tsx#RowIndicatorComponent"]={docgenInfo:RowIndicatorComponent.__docgenInfo,name:"RowIndicatorComponent",path:"src/RowIndicator.tsx#RowIndicatorComponent"})}catch(__react_docgen_typescript_loader_error){}try{RowIndicator_enhance.displayName="enhance",RowIndicator_enhance.__docgenInfo={description:"",displayName:"enhance",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/RowIndicator.tsx#enhance"]={docgenInfo:RowIndicator_enhance.__docgenInfo,name:"enhance",path:"src/RowIndicator.tsx#enhance"})}catch(__react_docgen_typescript_loader_error){}const Cell_Cell=({row,column,DataViewer,selected,active,dragging,mode,data,evaluatedData,select,activate,setCellDimensions,setCellData})=>{const rootRef=react.useRef(null),point=react.useMemo((()=>({row,column})),[row,column]),handleMouseDown=react.useCallback((event=>{"view"===mode&&(setCellDimensions(point,getOffsetRect(event.currentTarget)),event.shiftKey?select(point):activate(point))}),[mode,setCellDimensions,point,select,activate]),handleMouseOver=react.useCallback((event=>{dragging&&(setCellDimensions(point,getOffsetRect(event.currentTarget)),select(point))}),[setCellDimensions,select,dragging,point]);return react.useEffect((()=>{const root=rootRef.current;selected&&root&&setCellDimensions(point,getOffsetRect(root)),root&&active&&"view"===mode&&root.focus()}),[setCellDimensions,selected,active,mode,point,data]),data&&data.DataViewer&&(DataViewer=data.DataViewer),react.createElement("td",{ref:rootRef,className:classnames_default()("Spreadsheet__cell",data?.className,{"Spreadsheet__cell--readonly":data?.readOnly}),onMouseOver:handleMouseOver,onMouseDown:handleMouseDown,tabIndex:0},react.createElement(DataViewer,{row,column,cell:data,evaluatedCell:evaluatedData,setCellData}))},Cell_enhance=CellComponent=>function CellWrapper(props){const{row,column}=props,dispatch=use_dispatch(),point=react.useMemo((()=>({row,column})),[row,column]),setCellData=react.useCallback((data=>dispatch(actions_setCellData(point,data))),[dispatch,point]),select=react.useCallback((point=>dispatch(function actions_select(point){return{type:"SELECT",payload:{point}}}(point))),[dispatch]),activate=react.useCallback((point=>dispatch(actions_activate(point))),[dispatch]),setCellDimensions=react.useCallback(((point,dimensions)=>dispatch(function actions_setCellDimensions(point,dimensions){return{type:"SET_CELL_DIMENSIONS",payload:{point,dimensions}}}(point,dimensions))),[dispatch]),active=use_selector((state=>isActive(state.active,point))),mode=use_selector((state=>active?state.mode:"view")),data=use_selector((state=>get(point,state.model.data))),evaluatedData=use_selector((state=>get(point,state.model.evaluatedData))),selected=use_selector((state=>state.selected.has(state.model.data,point))),dragging=use_selector((state=>state.dragging)),copied=use_selector((state=>state.copied?.has(point)||!1));return react.createElement(CellComponent,{...props,selected,active,copied,dragging,mode,evaluatedData,data,select,activate,setCellDimensions,setCellData})};try{Cell_Cell.displayName="Cell",Cell_Cell.__docgenInfo={description:"",displayName:"Cell",props:{row:{defaultValue:null,description:"The row of the cell",name:"row",required:!0,type:{name:"number"}},column:{defaultValue:null,description:"The column of the cell",name:"column",required:!0,type:{name:"number"}},DataViewer:{defaultValue:null,description:"The DataViewer component to be used by the cell",name:"DataViewer",required:!0,type:{name:"DataViewerComponent<CellBase<any>>"}},selected:{defaultValue:null,description:"Whether the cell is selected",name:"selected",required:!0,type:{name:"boolean"}},active:{defaultValue:null,description:"Whether the cell is active",name:"active",required:!0,type:{name:"boolean"}},copied:{defaultValue:null,description:"Whether the cell is copied",name:"copied",required:!0,type:{name:"boolean"}},dragging:{defaultValue:null,description:"Whether the user is dragging",name:"dragging",required:!0,type:{name:"boolean"}},mode:{defaultValue:null,description:"The mode of the cell",name:"mode",required:!0,type:{name:"enum",value:[{value:'"view"'},{value:'"edit"'}]}},data:{defaultValue:null,description:"The data of the cell",name:"data",required:!0,type:{name:"CellBase<any> | undefined"}},evaluatedData:{defaultValue:null,description:"The evaluated data of the cell",name:"evaluatedData",required:!0,type:{name:"CellBase<any> | undefined"}},select:{defaultValue:null,description:"Select the cell at the given point",name:"select",required:!0,type:{name:"(point: Point) => void"}},activate:{defaultValue:null,description:"Activate the cell at the given point",name:"activate",required:!0,type:{name:"(point: Point) => void"}},setCellDimensions:{defaultValue:null,description:"Set the dimensions of the cell at the given point with the given dimensions",name:"setCellDimensions",required:!0,type:{name:"(point: Point, dimensions: Dimensions) => void"}},setCellData:{defaultValue:null,description:"Set data of the cell",name:"setCellData",required:!0,type:{name:"(cell: CellBase<any>) => void"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/Cell.tsx#Cell"]={docgenInfo:Cell_Cell.__docgenInfo,name:"Cell",path:"src/Cell.tsx#Cell"})}catch(__react_docgen_typescript_loader_error){}try{Cell_enhance.displayName="enhance",Cell_enhance.__docgenInfo={description:"",displayName:"enhance",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/Cell.tsx#enhance"]={docgenInfo:Cell_enhance.__docgenInfo,name:"enhance",path:"src/Cell.tsx#enhance"})}catch(__react_docgen_typescript_loader_error){}const DataViewer=({cell,evaluatedCell})=>{const value=function getValue(cell,evaluatedCell){const baseValue=evaluatedCell?.value??cell?.value;if(baseValue&&"object"==typeof baseValue)return baseValue.toString();return baseValue}(cell,evaluatedCell);return"boolean"==typeof value?react.createElement("span",{className:"Spreadsheet__data-viewer Spreadsheet__data-viewer--boolean"},convertBooleanToText(value)):react.createElement("span",{className:classnames_default()("Spreadsheet__data-viewer",{"Spreadsheet__data-viewer--preserve-breaks":hasLineBreaker(value)})},value)},src_DataViewer=DataViewer;function convertBooleanToText(value){return value?"TRUE":"FALSE"}try{convertBooleanToText.displayName="convertBooleanToText",convertBooleanToText.__docgenInfo={description:"",displayName:"convertBooleanToText",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/DataViewer.tsx#convertBooleanToText"]={docgenInfo:convertBooleanToText.__docgenInfo,name:"convertBooleanToText",path:"src/DataViewer.tsx#convertBooleanToText"})}catch(__react_docgen_typescript_loader_error){}try{DataViewer.displayName="DataViewer",DataViewer.__docgenInfo={description:"The default Spreadsheet DataViewer component",displayName:"DataViewer",props:{cell:{defaultValue:null,description:"The rendered cell by the component",name:"cell",required:!0,type:{name:"CellBase<Value> | undefined"}},column:{defaultValue:null,description:"The cell's column",name:"column",required:!0,type:{name:"number"}},row:{defaultValue:null,description:"The cell's row",name:"row",required:!0,type:{name:"number"}},setCellData:{defaultValue:null,description:"Set data of the cell",name:"setCellData",required:!0,type:{name:"(cell: Cell) => void"}},evaluatedCell:{defaultValue:null,description:"",name:"evaluatedCell",required:!0,type:{name:"CellBase<Value> | undefined"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/DataViewer.tsx#DataViewer"]={docgenInfo:DataViewer.__docgenInfo,name:"DataViewer",path:"src/DataViewer.tsx#DataViewer"})}catch(__react_docgen_typescript_loader_error){}const DataEditor=({onChange,cell})=>{const inputRef=react.useRef(null),handleChange=react.useCallback((event=>{onChange({...cell,value:event.target.value})}),[onChange,cell]);react.useEffect((()=>{inputRef.current&&function moveCursorToEnd(el){el.selectionStart=el.selectionEnd=el.value.length}(inputRef.current)}),[inputRef]);const value=cell?.value??"";return react.createElement("div",{className:"Spreadsheet__data-editor"},react.createElement("input",{ref:inputRef,type:"text",onChange:handleChange,value,autoFocus:!0}))},src_DataEditor=DataEditor;try{DataEditor.displayName="DataEditor",DataEditor.__docgenInfo={description:"The default Spreadsheet DataEditor component",displayName:"DataEditor",props:{cell:{defaultValue:null,description:"The rendered cell by the component",name:"cell",required:!0,type:{name:"CellBase<any> | undefined"}},column:{defaultValue:null,description:"The cell's column",name:"column",required:!0,type:{name:"number"}},row:{defaultValue:null,description:"The cell's row",name:"row",required:!0,type:{name:"number"}},onChange:{defaultValue:null,description:"Callback to be called when the cell's value is changed",name:"onChange",required:!0,type:{name:"(cell: CellBase<any>) => void"}},exitEditMode:{defaultValue:null,description:"Callback to be called when edit mode should be exited",name:"exitEditMode",required:!0,type:{name:"() => void"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/DataEditor.tsx#DataEditor"]={docgenInfo:DataEditor.__docgenInfo,name:"DataEditor",path:"src/DataEditor.tsx#DataEditor"})}catch(__react_docgen_typescript_loader_error){}const ActiveCell=props=>{const rootRef=react.useRef(null),dispatch=use_dispatch(),setCellData=react.useCallback(((active,data)=>dispatch(actions_setCellData(active,data))),[dispatch]),edit=react.useCallback((()=>dispatch({type:"EDIT"})),[dispatch]),commit=react.useCallback((changes=>dispatch(function actions_commit(changes){return{type:"COMMIT",payload:{changes}}}(changes))),[dispatch]),view=react.useCallback((()=>{dispatch({type:"VIEW"})}),[dispatch]),active=use_selector((state=>state.active)),mode=use_selector((state=>state.mode)),cell=use_selector((state=>state.active?get(state.active,state.model.data):void 0)),dimensions=use_selector((state=>active?getCellDimensions(active,state.rowDimensions,state.columnDimensions):void 0)),hidden=react.useMemo((()=>!active||!dimensions),[active,dimensions]),initialCellRef=react.useRef(void 0),prevActiveRef=react.useRef(null),prevCellRef=react.useRef(void 0),handleChange=react.useCallback((cell=>{active&&setCellData(active,cell)}),[setCellData,active]);react.useEffect((()=>{const root=rootRef.current;!hidden&&root&&root.focus()}),[rootRef,hidden]),react.useEffect((()=>{const prevActive=prevActiveRef.current,prevCell=prevCellRef.current;if(prevActiveRef.current=active,prevCellRef.current=cell,!prevActive||!prevCell)return;const coordsChanged=active?.row!==prevActive.row||active?.column!==prevActive.column;if(coordsChanged||"edit"!==mode){const initialCell=initialCellRef.current;prevCell!==initialCell?commit([{prevCell:initialCell||null,nextCell:prevCell}]):coordsChanged||cell===prevCell||commit([{prevCell,nextCell:cell||null}]),initialCellRef.current=cell}}));const DataEditor=cell&&cell.DataEditor||props.DataEditor,readOnly=cell&&cell.readOnly;return hidden?null:react.createElement("div",{ref:rootRef,className:classnames_default()("Spreadsheet__active-cell",`Spreadsheet__active-cell--${mode}`),style:dimensions,onClick:"view"!==mode||readOnly?void 0:edit,tabIndex:0},"edit"===mode&&active&&react.createElement(DataEditor,{row:active.row,column:active.column,cell,onChange:handleChange,exitEditMode:view}))},src_ActiveCell=ActiveCell;try{ActiveCell.displayName="ActiveCell",ActiveCell.__docgenInfo={description:"",displayName:"ActiveCell",props:{DataEditor:{defaultValue:null,description:"",name:"DataEditor",required:!0,type:{name:"DataEditorComponent<CellBase<any>>"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/ActiveCell.tsx#ActiveCell"]={docgenInfo:ActiveCell.__docgenInfo,name:"ActiveCell",path:"src/ActiveCell.tsx#ActiveCell"})}catch(__react_docgen_typescript_loader_error){}const FloatingRect=({dimensions,dragging,hidden,variant})=>{const{width,height,top,left}=dimensions||{};return react.createElement("div",{className:classnames_default()("Spreadsheet__floating-rect",{[`Spreadsheet__floating-rect--${variant}`]:variant,"Spreadsheet__floating-rect--dragging":dragging,"Spreadsheet__floating-rect--hidden":hidden}),style:{width,height,top,left}})},src_FloatingRect=FloatingRect;try{FloatingRect.displayName="FloatingRect",FloatingRect.__docgenInfo={description:"",displayName:"FloatingRect",props:{variant:{defaultValue:null,description:"",name:"variant",required:!1,type:{name:"string"}},dimensions:{defaultValue:null,description:"",name:"dimensions",required:!1,type:{name:"Dimensions | null"}},hidden:{defaultValue:null,description:"",name:"hidden",required:!1,type:{name:"boolean"}},dragging:{defaultValue:null,description:"",name:"dragging",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/FloatingRect.tsx#FloatingRect"]={docgenInfo:FloatingRect.__docgenInfo,name:"FloatingRect",path:"src/FloatingRect.tsx#FloatingRect"})}catch(__react_docgen_typescript_loader_error){}const Selected=()=>{const selected=use_selector((state=>state.selected)),dimensions=use_selector((state=>selected&&function getSelectedDimensions(rowDimensions,columnDimensions,data,selected){const range=selected.toRange(data);return range?getRangeDimensions(rowDimensions,columnDimensions,range):void 0}(state.rowDimensions,state.columnDimensions,state.model.data,state.selected))),dragging=use_selector((state=>state.dragging)),hidden=use_selector((state=>state.selected.size(state.model.data)<2));return react.createElement(src_FloatingRect,{variant:"selected",dimensions,dragging,hidden})},src_Selected=Selected;try{Selected.displayName="Selected",Selected.__docgenInfo={description:"",displayName:"Selected",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/Selected.tsx#Selected"]={docgenInfo:Selected.__docgenInfo,name:"Selected",path:"src/Selected.tsx#Selected"})}catch(__react_docgen_typescript_loader_error){}const Copied=()=>{const range=use_selector((state=>state.copied)),dimensions=use_selector((state=>range&&getRangeDimensions(state.rowDimensions,state.columnDimensions,range))),hidden=null===range;return react.createElement(src_FloatingRect,{variant:"copied",dimensions,hidden,dragging:!1})},src_Copied=Copied;try{Copied.displayName="Copied",Copied.__docgenInfo={description:"",displayName:"Copied",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/Copied.tsx#Copied"]={docgenInfo:Copied.__docgenInfo,name:"Copied",path:"src/Copied.tsx#Copied"})}catch(__react_docgen_typescript_loader_error){}var injectStylesIntoStyleTag=__webpack_require__("./node_modules/@storybook/builder-webpack5/node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js"),injectStylesIntoStyleTag_default=__webpack_require__.n(injectStylesIntoStyleTag),styleDomAPI=__webpack_require__("./node_modules/@storybook/builder-webpack5/node_modules/style-loader/dist/runtime/styleDomAPI.js"),styleDomAPI_default=__webpack_require__.n(styleDomAPI),insertBySelector=__webpack_require__("./node_modules/@storybook/builder-webpack5/node_modules/style-loader/dist/runtime/insertBySelector.js"),insertBySelector_default=__webpack_require__.n(insertBySelector),setAttributesWithoutAttributes=__webpack_require__("./node_modules/@storybook/builder-webpack5/node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js"),setAttributesWithoutAttributes_default=__webpack_require__.n(setAttributesWithoutAttributes),insertStyleElement=__webpack_require__("./node_modules/@storybook/builder-webpack5/node_modules/style-loader/dist/runtime/insertStyleElement.js"),insertStyleElement_default=__webpack_require__.n(insertStyleElement),styleTagTransform=__webpack_require__("./node_modules/@storybook/builder-webpack5/node_modules/style-loader/dist/runtime/styleTagTransform.js"),styleTagTransform_default=__webpack_require__.n(styleTagTransform),cjs_ruleSet_1_rules_6_use_1_src_Spreadsheet=__webpack_require__("./node_modules/@storybook/builder-webpack5/node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[6].use[1]!./src/Spreadsheet.css"),options={};options.styleTagTransform=styleTagTransform_default(),options.setAttributes=setAttributesWithoutAttributes_default(),options.insert=insertBySelector_default().bind(null,"head"),options.domAPI=styleDomAPI_default(),options.insertStyleElement=insertStyleElement_default();injectStylesIntoStyleTag_default()(cjs_ruleSet_1_rules_6_use_1_src_Spreadsheet.Z,options);cjs_ruleSet_1_rules_6_use_1_src_Spreadsheet.Z&&cjs_ruleSet_1_rules_6_use_1_src_Spreadsheet.Z.locals&&cjs_ruleSet_1_rules_6_use_1_src_Spreadsheet.Z.locals;const Spreadsheet_Spreadsheet=(props,ref)=>{const{className,darkMode,columnLabels,rowLabels,hideColumnIndicators,hideRowIndicators,onKeyDown,Table=src_Table,Row=src_Row,HeaderRow=src_HeaderRow,DataEditor=src_DataEditor,DataViewer=src_DataViewer,onChange=()=>{},onModeChange=()=>{},onSelect=()=>{},onActivate=()=>{},onBlur=()=>{},onCellCommit=()=>{},onEvaluatedDataChange=()=>{}}=props,initialState=react.useMemo((()=>{const createParser=props.createFormulaParser||createFormulaParser,model=new Model(createParser,props.data);return{...INITIAL_STATE,model,selected:props.selected||INITIAL_STATE.selected}}),[props.createFormulaParser,props.data,props.selected]),reducerElements=react.useReducer(reducer,initialState),[state,dispatch]=reducerElements,size=react.useMemo((()=>function calculateSpreadsheetSize(data,rowLabels,columnLabels){const{columns,rows}=getSize(data);return{rows:rowLabels?Math.max(rows,rowLabels.length):rows,columns:columnLabels?Math.max(columns,columnLabels.length):columns}}(state.model.data,rowLabels,columnLabels)),[state.model.data,rowLabels,columnLabels]),mode=state.mode,rootRef=react.useRef(null),useAction=action=>react.useCallback(((...args)=>dispatch(action(...args))),[action]),cut=useAction(actions_cut),copy=useAction(actions_copy),paste=useAction(actions_paste),onKeyDownAction=useAction(keyDown),onKeyPress=useAction(keyPress),onDragStart=useAction(dragStart),onDragEnd=useAction(dragEnd),setData=useAction(actions_setData),setCreateFormulaParser=useAction(actions_setCreateFormulaParser),blur=useAction(actions_blur),setSelection=useAction(actions_setSelection),activate=useAction(actions_activate),methods=react.useMemo((()=>({activate:point=>{activate(point)}})),[]);react.useImperativeHandle(ref,(()=>methods));const prevActiveRef=react.useRef(state.active);react.useEffect((()=>{if(state.active!==prevActiveRef.current)if(state.active)onActivate(state.active);else{const root=rootRef.current;root&&isFocusedWithin(root)&&document.activeElement&&document.activeElement.blur(),onBlur()}prevActiveRef.current=state.active}),[onActivate,onBlur,state.active]);const prevDataRef=react.useRef(state.model.data);react.useEffect((()=>{state.model.data!==prevDataRef.current&&state.model.data!==props.data&&onChange(state.model.data),prevDataRef.current=state.model.data}),[state.model.data,onChange,props.data]);const prevEvaluatedDataRef=react.useRef(state.model.evaluatedData);react.useEffect((()=>{state?.model?.evaluatedData!==prevEvaluatedDataRef?.current&&onEvaluatedDataChange(state?.model?.evaluatedData),prevEvaluatedDataRef.current=state.model.evaluatedData}),[state?.model?.evaluatedData,onEvaluatedDataChange]);const prevSelectedRef=react.useRef(state.selected);react.useEffect((()=>{state.selected.equals(prevSelectedRef.current)||props.selected&&state.selected.equals(props.selected)||onSelect(state.selected),prevSelectedRef.current=state.selected}),[state.selected,onSelect,props.selected]);const prevModeRef=react.useRef(state.mode);react.useEffect((()=>{state.mode!==prevModeRef.current&&onModeChange(state.mode),prevModeRef.current=state.mode}),[state.mode,onModeChange]);const prevLastCommitRef=react.useRef(state.lastCommit);react.useEffect((()=>{if(state.lastCommit&&state.lastCommit!==prevLastCommitRef.current)for(const change of state.lastCommit)onCellCommit(change.prevCell,change.nextCell,state.lastChanged)}),[onCellCommit,state.lastChanged,state.lastCommit]);const prevSelectedPropRef=react.useRef(props.selected);react.useEffect((()=>{props.selected&&prevSelectedPropRef.current&&!props.selected.equals(prevSelectedPropRef.current)&&setSelection(props.selected),prevSelectedPropRef.current=props.selected}),[props.selected,setSelection]);const prevDataPropRef=react.useRef(props.data);react.useEffect((()=>{props.data!==prevDataPropRef.current&&setData(props.data),prevDataPropRef.current=props.data}),[props.data,setData]);const prevCreateFormulaParserPropRef=react.useRef(props.createFormulaParser);react.useEffect((()=>{props.createFormulaParser!==prevCreateFormulaParserPropRef.current&&props.createFormulaParser&&setCreateFormulaParser(props.createFormulaParser),prevCreateFormulaParserPropRef.current=props.createFormulaParser}),[props.createFormulaParser,setCreateFormulaParser]);const writeDataToClipboard=react.useCallback((event=>{const{model,selected}=state,{data}=model,range=selected.toRange(data);if(range){!function writeTextToClipboard(event,data){event.clipboardData?.setData("text/plain",data)}(event,getCSV(slice(range.start,range.end,data)))}}),[state]),handleCut=react.useCallback((event=>{shouldHandleClipboardEvent(rootRef.current,mode)&&(event.preventDefault(),event.stopPropagation(),writeDataToClipboard(event),cut())}),[mode,writeDataToClipboard,cut]),handleCopy=react.useCallback((event=>{shouldHandleClipboardEvent(rootRef.current,mode)&&(event.preventDefault(),event.stopPropagation(),writeDataToClipboard(event),copy())}),[mode,writeDataToClipboard,copy]),handlePaste=react.useCallback((event=>{if(shouldHandleClipboardEvent(rootRef.current,mode)&&(event.preventDefault(),event.stopPropagation(),event.clipboardData)){const text=function readTextFromClipboard(event){return window.clipboardData&&window.clipboardData.getData?window.clipboardData.getData("Text"):event.clipboardData&&event.clipboardData.getData?event.clipboardData.getData("text/plain"):""}(event);paste(text)}}),[mode,paste]),handleKeyDown=react.useCallback((event=>{event.persist(),onKeyDown&&onKeyDown(event),event.defaultPrevented||(function hasKeyDownHandler(state,event){return void 0!==getKeyDownHandler(state,event)}(state,event)&&event.nativeEvent.preventDefault(),onKeyDownAction(event))}),[state,onKeyDown,onKeyDownAction]),handleMouseUp=react.useCallback((()=>{onDragEnd(),document.removeEventListener("mouseup",handleMouseUp)}),[onDragEnd]),handleMouseMove=react.useCallback((event=>{state.dragging||1!==event.buttons||(onDragStart(),document.addEventListener("mouseup",handleMouseUp))}),[state,onDragStart,handleMouseUp]),handleBlur=react.useCallback((event=>{event.currentTarget.contains(event.relatedTarget)||blur()}),[blur]),Cell=react.useMemo((()=>Cell_enhance(props.Cell||Cell_Cell)),[props.Cell]),CornerIndicator=react.useMemo((()=>enhance(props.CornerIndicator||src_CornerIndicator)),[props.CornerIndicator]),RowIndicator=react.useMemo((()=>RowIndicator_enhance(props.RowIndicator||src_RowIndicator)),[props.RowIndicator]),ColumnIndicator=react.useMemo((()=>ColumnIndicator_enhance(props.ColumnIndicator||src_ColumnIndicator)),[props.ColumnIndicator]);react.useEffect((()=>(document.addEventListener("cut",handleCut),document.addEventListener("copy",handleCopy),document.addEventListener("paste",handlePaste),()=>{document.removeEventListener("cut",handleCut),document.removeEventListener("copy",handleCopy),document.removeEventListener("paste",handlePaste)})),[handleCut,handleCopy,handlePaste]);const tableNode=react.useMemo((()=>react.createElement(Table,{columns:size.columns,hideColumnIndicators},react.createElement(HeaderRow,null,!hideRowIndicators&&!hideColumnIndicators&&react.createElement(CornerIndicator,null),!hideColumnIndicators&&range(size.columns).map((columnNumber=>columnLabels?react.createElement(ColumnIndicator,{key:columnNumber,column:columnNumber,label:columnNumber in columnLabels?columnLabels[columnNumber]:null}):react.createElement(ColumnIndicator,{key:columnNumber,column:columnNumber})))),range(size.rows).map((rowNumber=>react.createElement(Row,{key:rowNumber,row:rowNumber},!hideRowIndicators&&(rowLabels?react.createElement(RowIndicator,{key:rowNumber,row:rowNumber,label:rowNumber in rowLabels?rowLabels[rowNumber]:null}):react.createElement(RowIndicator,{key:rowNumber,row:rowNumber})),range(size.columns).map((columnNumber=>react.createElement(Cell,{key:columnNumber,row:rowNumber,column:columnNumber,DataViewer})))))))),[Table,size.rows,size.columns,hideColumnIndicators,Row,HeaderRow,hideRowIndicators,CornerIndicator,columnLabels,ColumnIndicator,rowLabels,RowIndicator,Cell,DataViewer]),activeCellNode=react.useMemo((()=>react.createElement(src_ActiveCell,{DataEditor})),[DataEditor]),rootNode=react.useMemo((()=>react.createElement("div",{ref:rootRef,className:classnames_default()("Spreadsheet",className,{"Spreadsheet--dark-mode":darkMode}),onKeyPress,onKeyDown:handleKeyDown,onMouseMove:handleMouseMove,onBlur:handleBlur},tableNode,activeCellNode,react.createElement(src_Selected,null),react.createElement(src_Copied,null))),[className,darkMode,onKeyPress,handleKeyDown,handleMouseMove,handleBlur,tableNode,activeCellNode]);return react.createElement(src_context.Provider,{value:reducerElements},rootNode)},src_Spreadsheet_0=react.forwardRef(Spreadsheet_Spreadsheet);try{Spreadsheet_Spreadsheet.displayName="Spreadsheet",Spreadsheet_Spreadsheet.__docgenInfo={description:"The Spreadsheet component",displayName:"Spreadsheet",props:{data:{defaultValue:null,description:"The spreadsheet's data",name:"data",required:!0,type:{name:"Matrix<CellType>"}},className:{defaultValue:null,description:"Class name to be added to the spreadsheet's root element",name:"className",required:!1,type:{name:"string"}},darkMode:{defaultValue:null,description:"Use dark colors that complement dark mode\n@defaultValue `false`",name:"darkMode",required:!1,type:{name:"boolean"}},createFormulaParser:{defaultValue:null,description:"Function used to create the formula parser (instance of\n\"fast-formula-parser\") used by the Spreadsheet by getting the spreadsheet's\ndata.\n@defaultValue function which creates a formula parser bound to the\nSpreadsheet's data.\n@see  `createFormulaParser`\n@see https://www.npmjs.com/package/fast-formula-parser",name:"createFormulaParser",required:!1,type:{name:"CreateFormulaParser"}},columnLabels:{defaultValue:null,description:"Labels to use in column indicators.\n@defaultValue alphabetical labels.",name:"columnLabels",required:!1,type:{name:"string[]"}},rowLabels:{defaultValue:null,description:"Labels to use in row indicators.\n@defaultValue row index labels.",name:"rowLabels",required:!1,type:{name:"string[]"}},hideRowIndicators:{defaultValue:null,description:"If set to true, hides the row indicators of the spreadsheet.\n@defaultValue `false`.",name:"hideRowIndicators",required:!1,type:{name:"boolean"}},hideColumnIndicators:{defaultValue:null,description:"If set to true, hides the column indicators of the spreadsheet.\n@defaultValue `false`.",name:"hideColumnIndicators",required:!1,type:{name:"boolean"}},selected:{defaultValue:null,description:"The selected cells in the worksheet.",name:"selected",required:!1,type:{name:"Selection"}},ColumnIndicator:{defaultValue:null,description:"Component rendered above each column.",name:"ColumnIndicator",required:!1,type:{name:"ColumnIndicatorComponent"}},CornerIndicator:{defaultValue:null,description:"Component rendered in the corner of row and column indicators.",name:"CornerIndicator",required:!1,type:{name:"CornerIndicatorComponent"}},RowIndicator:{defaultValue:null,description:"Component rendered next to each row.",name:"RowIndicator",required:!1,type:{name:"RowIndicatorComponent"}},Table:{defaultValue:null,description:"The Spreadsheet's table component.",name:"Table",required:!1,type:{name:"TableComponent"}},Row:{defaultValue:null,description:"The Spreadsheet's row component.",name:"Row",required:!1,type:{name:"RowComponent"}},HeaderRow:{defaultValue:null,description:"The spreadsheet's header row component",name:"HeaderRow",required:!1,type:{name:"HeaderRowComponent"}},Cell:{defaultValue:null,description:"The Spreadsheet's cell component.",name:"Cell",required:!1,type:{name:"CellComponent<CellType>"}},DataViewer:{defaultValue:null,description:"Component rendered for cells in view mode.",name:"DataViewer",required:!1,type:{name:"DataViewerComponent<CellType>"}},DataEditor:{defaultValue:null,description:"Component rendered for cells in edit mode.",name:"DataEditor",required:!1,type:{name:"DataEditorComponent<CellType>"}},onKeyDown:{defaultValue:null,description:"Callback called on key down inside the spreadsheet.",name:"onKeyDown",required:!1,type:{name:"((event: KeyboardEvent<Element>) => void)"}},onChange:{defaultValue:null,description:"Callback called when the Spreadsheet's data changes.",name:"onChange",required:!1,type:{name:"((data: Matrix<CellType>) => void)"}},onModeChange:{defaultValue:null,description:"Callback called when the Spreadsheet's edit mode changes.",name:"onModeChange",required:!1,type:{name:"((mode: Mode) => void)"}},onSelect:{defaultValue:null,description:"Callback called when the Spreadsheet's selection changes.",name:"onSelect",required:!1,type:{name:"((selected: Selection) => void)"}},onActivate:{defaultValue:null,description:"Callback called when Spreadsheet's active cell changes.",name:"onActivate",required:!1,type:{name:"((active: Point) => void)"}},onBlur:{defaultValue:null,description:"Callback called when the Spreadsheet loses focus",name:"onBlur",required:!1,type:{name:"(() => void)"}},onCellCommit:{defaultValue:null,description:"",name:"onCellCommit",required:!1,type:{name:"((prevCell: CellType | null, nextCell: CellType | null, coords: Point | null) => void)"}},onEvaluatedDataChange:{defaultValue:null,description:"Callback called when the Spreadsheet's evaluated data changes.",name:"onEvaluatedDataChange",required:!1,type:{name:"((data: Matrix<CellType>) => void)"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/Spreadsheet.tsx#Spreadsheet"]={docgenInfo:Spreadsheet_Spreadsheet.__docgenInfo,name:"Spreadsheet",path:"src/Spreadsheet.tsx#Spreadsheet"})}catch(__react_docgen_typescript_loader_error){}const stories_CustomCell=({column,row,setCellDimensions,select,activate,mode,dragging,active,data,evaluatedData,DataViewer,setCellData})=>{const rootRef=react.createRef();react.useEffect((()=>{setCellDimensions({row,column},{height:30,width:96,left:96*(column+1),top:30*(row+1)})}),[setCellDimensions,column,row]),react.useEffect((()=>{rootRef.current&&active&&"view"===mode&&rootRef.current.focus()}),[rootRef,active,mode]);const handleMouseDown=react.useCallback((event=>{if("view"===mode){if(event.shiftKey)return void select({row,column});activate({row,column})}}),[select,activate,column,mode,row]),handleMouseOver=react.useCallback((()=>{dragging&&select({row,column})}),[dragging,select,column,row]);return data&&data.DataViewer&&({DataViewer,...data}=data),react.createElement("td",{ref:rootRef,className:classnames_default()("Spreadsheet__cell",data&&data.readOnly&&"Spreadsheet__cell--readonly",data&&data.className),style:{borderColor:active?"black":"none"},tabIndex:0,onMouseOver:handleMouseOver,onMouseDown:handleMouseDown},react.createElement(DataViewer,{row,column,cell:data,evaluatedCell:evaluatedData,setCellData}))};try{CellComponent.displayName="CellComponent",CellComponent.__docgenInfo={description:"Type of the Spreadsheet Cell component",displayName:"CellComponent",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/stories/CustomCell.tsx#CellComponent"]={docgenInfo:CellComponent.__docgenInfo,name:"CellComponent",path:"src/stories/CustomCell.tsx#CellComponent"})}catch(__react_docgen_typescript_loader_error){}var react_select_esm=__webpack_require__("./node_modules/react-select/dist/react-select.esm.js");const OPTIONS=[{value:"vanilla",label:"Vanilla"},{value:"chocolate",label:"Chocolate"},{value:"caramel",label:"Caramel"}],CustomCornerIndicator=()=>react.createElement("th",{className:"Spreadsheet__header",style:{position:"relative"},onClick:()=>alert("You clicked the corner indicator!")},react.createElement("div",{style:{bottom:-3,position:"absolute",right:1,width:0,height:0,borderTop:"8px solid transparent",borderBottom:"8px solid transparent",borderLeft:"8px solid #777",transform:"rotate(45deg)"}}));try{CustomCornerIndicator.displayName="CustomCornerIndicator",CustomCornerIndicator.__docgenInfo={description:"",displayName:"CustomCornerIndicator",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/stories/CustomCornerIndicator.tsx#CustomCornerIndicator"]={docgenInfo:CustomCornerIndicator.__docgenInfo,name:"CustomCornerIndicator",path:"src/stories/CustomCornerIndicator.tsx#CustomCornerIndicator"})}catch(__react_docgen_typescript_loader_error){}const EMPTY_DATA=createEmpty(6,4),meta={title:"Spreadsheet",component:src_Spreadsheet_0,parameters:{controls:{expanded:!0,exclude:/ColumnIndicator|CornerIndicator|RowIndicator|Cell|HeaderRow|DataViewer|DataEditor|Row|Table/}},args:{data:EMPTY_DATA},decorators:[Story=>react.createElement("div",{onKeyDown:e=>{(e.target instanceof HTMLElement&&e.target.classList.contains("Spreadsheet__active-cell")||e.target instanceof HTMLInputElement)&&e.stopPropagation()}},react.createElement(Story,null))]},Spreadsheet_stories=meta,Basic={args:{}},DarkMode={args:{...meta.args,darkMode:!0}},Controlled=props=>{const[data,setData]=react.useState(EMPTY_DATA),addColumn=react.useCallback((()=>setData((data=>data.map((row=>{const nextRow=[...row];return nextRow.length+=1,nextRow}))))),[setData]),removeColumn=react.useCallback((()=>{setData((data=>data.map((row=>row.slice(0,row.length-1)))))}),[setData]),addRow=react.useCallback((()=>setData((data=>{const{columns}=getSize(data);return[...data,Array(columns)]}))),[setData]),removeRow=react.useCallback((()=>{setData((data=>data.slice(0,data.length-1)))}),[setData]);return react.createElement(react.Fragment,null,react.createElement("div",null,react.createElement("button",{onClick:addColumn},"Add column"),react.createElement("button",{onClick:addRow},"Add row"),react.createElement("button",{onClick:removeColumn},"Remove column"),react.createElement("button",{onClick:removeRow},"Remove row")),react.createElement(src_Spreadsheet_0,{...props,data,onChange:setData}))},CustomRowLabels={args:{...meta.args,rowLabels:["Dan","Alice","Bob","Steve","Adam","Ruth"]}},CustomColumnLabels={args:{...meta.args,columnLabels:["Name","Age","Email","Address"]}},HideIndicators={args:{...meta.args,hideColumnIndicators:!0,hideRowIndicators:!0}},Readonly={args:{...meta.args,data:set({row:0,column:0},{readOnly:!0,value:"Read Only"},createEmpty(6,4))}},WithAsyncCellData={args:{...meta.args,data:set({row:2,column:2},{value:void 0,DataViewer:({cell})=>{const value=cell?.value;return react.createElement("div",null,value,react.createElement("button",{disabled:!0},"Click Me"))},DataEditor:({onChange,cell})=>{const[loading,setLoading]=react.useState(!1),handleClick=react.useCallback((()=>{setLoading(!0),setTimeout((()=>{setLoading(!1);const nextValue=Math.floor(100*Math.random());onChange({value:nextValue})}),1e3)}),[setLoading,onChange]),value=cell?.value;return react.createElement("div",null,value,loading?"Loading...":react.createElement("button",{onClick:handleClick},"Click Me"))}},createEmpty(6,4))}},WithCustomCell={args:{Cell:stories_CustomCell}},RangeCell={args:{data:set({row:2,column:2},{value:0,DataViewer:({cell})=>react.createElement("input",{type:"range",value:cell?.value,disabled:!0,style:{pointerEvents:"none"}}),DataEditor:({cell,onChange})=>{const handleChange=react.useCallback((event=>{onChange({...cell,value:Number(event.target.value)})}),[cell,onChange]),value=cell?.value||0;return react.createElement("input",{autoFocus:!0,type:"range",onChange:handleChange,value})}},createEmpty(6,4))}},WithSelectCell={args:{...meta.args,data:set({row:2,column:2},{value:void 0,DataViewer:({cell})=>{const option=react.useMemo((()=>cell&&OPTIONS.find((option=>option.value===cell.value))),[cell]);return react.createElement(react_select_esm.ZP,{value:option,options:OPTIONS,isDisabled:!0})},DataEditor:({cell,onChange,exitEditMode})=>{const handleChange=react.useCallback((selection=>{onChange({...cell,value:selection?selection.value:null})}),[cell,onChange]),option=react.useMemo((()=>cell&&OPTIONS.find((option=>option.value===cell.value))),[cell]);return react.createElement(react_select_esm.ZP,{value:option,onChange:handleChange,options:OPTIONS,autoFocus:!0,defaultMenuIsOpen:!0,onMenuClose:()=>exitEditMode()})},className:"select-cell"},createEmpty(6,4))}},WithCornerIndicator={args:{...meta.args,CornerIndicator:CustomCornerIndicator}},Filter=props=>{const[data,setData]=react.useState(EMPTY_DATA),[filter,setFilter]=react.useState(""),handleFilterChange=react.useCallback((event=>{const nextFilter=event.target.value;setFilter(nextFilter)}),[setFilter]),filtered=react.useMemo((()=>{if(0===filter.length)return data;const filtered=[];for(let row=0;row<data.length;row++)if(0!==data.length)for(let column=0;column<data[0].length;column++){const cell=data[row][column];cell&&cell.value&&cell.value.includes(filter)&&(filtered[0]||(filtered[0]=[]),filtered[0].length<column&&(filtered[0].length=column+1),filtered[row]||(filtered[row]=[]),filtered[row][column]=cell)}return filtered}),[data,filter]);return react.createElement(react.Fragment,null,react.createElement("div",null,react.createElement("input",{type:"text",placeholder:"Filter",value:filter,onChange:handleFilterChange})),react.createElement(src_Spreadsheet_0,{...props,data:filtered,onChange:setData}))},ControlledSelection=props=>{const[selected,setSelected]=react.useState(new EmptySelection),handleSelect=react.useCallback((selection=>{setSelected(selection)}),[]),handleSelectEntireRow=react.useCallback((()=>{setSelected(new EntireRowsSelection(0,0))}),[]),handleSelectEntireColumn=react.useCallback((()=>{setSelected(new EntireColumnsSelection(0,0))}),[]),handleSelectEntireWorksheet=react.useCallback((()=>{setSelected(new EntireWorksheetSelection)}),[]);return react.createElement("div",null,react.createElement("div",null,react.createElement("button",{onClick:handleSelectEntireRow},"Select entire row"),react.createElement("button",{onClick:handleSelectEntireColumn},"Select entire column"),react.createElement("button",{onClick:handleSelectEntireWorksheet},"Select entire worksheet")),react.createElement(src_Spreadsheet_0,{...props,selected,onSelect:handleSelect}),";")},ControlledActivation=props=>{const spreadsheetRef=react.useRef(),[activationPoint,setActivationPoint]=react.useState({row:0,column:0}),handleActivate=react.useCallback((()=>{spreadsheetRef.current?.activate(activationPoint)}),[activationPoint]);return react.createElement("div",null,react.createElement("div",null,react.createElement("input",{id:"row",title:"row",type:"number",value:activationPoint.row,onChange:e=>setActivationPoint((()=>({...activationPoint,row:Number(e.target.value)})))}),react.createElement("input",{id:"column",title:"row",type:"column",value:activationPoint.column,onChange:e=>setActivationPoint((()=>({...activationPoint,column:Number(e.target.value)})))}),react.createElement("button",{onClick:handleActivate},"Activate")),react.createElement(src_Spreadsheet_0,{ref:spreadsheetRef,...props}),";")},__namedExportsOrder=["Basic","DarkMode","Controlled","CustomRowLabels","CustomColumnLabels","HideIndicators","Readonly","WithAsyncCellData","WithCustomCell","RangeCell","WithSelectCell","WithCornerIndicator","Filter","ControlledSelection","ControlledActivation"];Basic.parameters={...Basic.parameters,docs:{...Basic.parameters?.docs,source:{originalSource:"{\n  args: {}\n}",...Basic.parameters?.docs?.source}}},DarkMode.parameters={...DarkMode.parameters,docs:{...DarkMode.parameters?.docs,source:{originalSource:"{\n  args: {\n    ...meta.args,\n    darkMode: true\n  }\n}",...DarkMode.parameters?.docs?.source}}},Controlled.parameters={...Controlled.parameters,docs:{...Controlled.parameters?.docs,source:{originalSource:"props => {\n  const [data, setData] = React.useState(EMPTY_DATA);\n  const addColumn = React.useCallback(() => setData(data => data.map(row => {\n    const nextRow = [...row];\n    nextRow.length += 1;\n    return nextRow;\n  })), [setData]);\n  const removeColumn = React.useCallback(() => {\n    setData(data => data.map(row => {\n      return row.slice(0, row.length - 1);\n    }));\n  }, [setData]);\n  const addRow = React.useCallback(() => setData(data => {\n    const {\n      columns\n    } = Matrix.getSize(data);\n    return [...data, Array(columns)];\n  }), [setData]);\n  const removeRow = React.useCallback(() => {\n    setData(data => {\n      return data.slice(0, data.length - 1);\n    });\n  }, [setData]);\n  return <>\n      <div>\n        <button onClick={addColumn}>Add column</button>\n        <button onClick={addRow}>Add row</button>\n        <button onClick={removeColumn}>Remove column</button>\n        <button onClick={removeRow}>Remove row</button>\n      </div>\n      <Spreadsheet {...props} data={data} onChange={setData} />\n    </>;\n}",...Controlled.parameters?.docs?.source}}},CustomRowLabels.parameters={...CustomRowLabels.parameters,docs:{...CustomRowLabels.parameters?.docs,source:{originalSource:'{\n  args: {\n    ...meta.args,\n    rowLabels: ["Dan", "Alice", "Bob", "Steve", "Adam", "Ruth"]\n  }\n}',...CustomRowLabels.parameters?.docs?.source}}},CustomColumnLabels.parameters={...CustomColumnLabels.parameters,docs:{...CustomColumnLabels.parameters?.docs,source:{originalSource:'{\n  args: {\n    ...meta.args,\n    columnLabels: ["Name", "Age", "Email", "Address"]\n  }\n}',...CustomColumnLabels.parameters?.docs?.source}}},HideIndicators.parameters={...HideIndicators.parameters,docs:{...HideIndicators.parameters?.docs,source:{originalSource:"{\n  args: {\n    ...meta.args,\n    hideColumnIndicators: true,\n    hideRowIndicators: true\n  }\n}",...HideIndicators.parameters?.docs?.source}}},Readonly.parameters={...Readonly.parameters,docs:{...Readonly.parameters?.docs,source:{originalSource:'{\n  args: {\n    ...meta.args,\n    data: Matrix.set({\n      row: 0,\n      column: 0\n    }, {\n      readOnly: true,\n      value: "Read Only"\n    }, createEmptyMatrix<StringCell>(INITIAL_ROWS, INITIAL_COLUMNS))\n  }\n}',...Readonly.parameters?.docs?.source}}},WithAsyncCellData.parameters={...WithAsyncCellData.parameters,docs:{...WithAsyncCellData.parameters?.docs,source:{originalSource:"{\n  args: {\n    ...meta.args,\n    data: Matrix.set({\n      row: 2,\n      column: 2\n    }, {\n      value: undefined,\n      DataViewer: AsyncCellDataViewer,\n      DataEditor: AsyncCellDataEditor\n    }, createEmptyMatrix<StringCell>(INITIAL_ROWS, INITIAL_COLUMNS))\n  }\n}",...WithAsyncCellData.parameters?.docs?.source}}},WithCustomCell.parameters={...WithCustomCell.parameters,docs:{...WithCustomCell.parameters?.docs,source:{originalSource:"{\n  args: {\n    Cell: CustomCell\n  }\n}",...WithCustomCell.parameters?.docs?.source}}},RangeCell.parameters={...RangeCell.parameters,docs:{...RangeCell.parameters?.docs,source:{originalSource:"{\n  args: {\n    data: Matrix.set({\n      row: 2,\n      column: 2\n    }, {\n      value: 0,\n      DataViewer: RangeView,\n      DataEditor: RangeEdit\n    }, createEmptyMatrix<NumberCell>(INITIAL_ROWS, INITIAL_COLUMNS))\n  }\n}",...RangeCell.parameters?.docs?.source}}},WithSelectCell.parameters={...WithSelectCell.parameters,docs:{...WithSelectCell.parameters?.docs,source:{originalSource:'{\n  args: {\n    ...meta.args,\n    data: Matrix.set({\n      row: 2,\n      column: 2\n    }, {\n      value: undefined,\n      DataViewer: SelectView,\n      DataEditor: SelectEdit,\n      className: "select-cell"\n    }, createEmptyMatrix<StringCell>(INITIAL_ROWS, INITIAL_COLUMNS))\n  }\n}',...WithSelectCell.parameters?.docs?.source}}},WithCornerIndicator.parameters={...WithCornerIndicator.parameters,docs:{...WithCornerIndicator.parameters?.docs,source:{originalSource:"{\n  args: {\n    ...meta.args,\n    CornerIndicator: CustomCornerIndicator\n  }\n}",...WithCornerIndicator.parameters?.docs?.source}}},Filter.parameters={...Filter.parameters,docs:{...Filter.parameters?.docs,source:{originalSource:'props => {\n  const [data, setData] = React.useState(EMPTY_DATA as Matrix.Matrix<StringCell>);\n  const [filter, setFilter] = React.useState("");\n  const handleFilterChange = React.useCallback((event: React.ChangeEvent<HTMLInputElement>) => {\n    const nextFilter = event.target.value;\n    setFilter(nextFilter);\n  }, [setFilter]);\n\n  /**\n   * Removes cells not matching the filter from matrix while maintaining the\n   * minimum size that includes all of the matching cells.\n   */\n  const filtered = React.useMemo(() => {\n    if (filter.length === 0) {\n      return data;\n    }\n    const filtered: Matrix.Matrix<StringCell> = [];\n    for (let row = 0; row < data.length; row++) {\n      if (data.length !== 0) {\n        for (let column = 0; column < data[0].length; column++) {\n          const cell = data[row][column];\n          if (cell && cell.value && cell.value.includes(filter)) {\n            if (!filtered[0]) {\n              filtered[0] = [];\n            }\n            if (filtered[0].length < column) {\n              filtered[0].length = column + 1;\n            }\n            if (!filtered[row]) {\n              filtered[row] = [];\n            }\n            filtered[row][column] = cell;\n          }\n        }\n      }\n    }\n    return filtered;\n  }, [data, filter]);\n  return <>\n      <div>\n        <input type="text" placeholder="Filter" value={filter} onChange={handleFilterChange} />\n      </div>\n      <Spreadsheet {...props} data={filtered} onChange={setData} />\n    </>;\n}',...Filter.parameters?.docs?.source}}},ControlledSelection.parameters={...ControlledSelection.parameters,docs:{...ControlledSelection.parameters?.docs,source:{originalSource:"props => {\n  const [selected, setSelected] = React.useState<Selection>(new EmptySelection());\n  const handleSelect = React.useCallback((selection: Selection) => {\n    setSelected(selection);\n  }, []);\n  const handleSelectEntireRow = React.useCallback(() => {\n    setSelected(new EntireRowsSelection(0, 0));\n  }, []);\n  const handleSelectEntireColumn = React.useCallback(() => {\n    setSelected(new EntireColumnsSelection(0, 0));\n  }, []);\n  const handleSelectEntireWorksheet = React.useCallback(() => {\n    setSelected(new EntireWorksheetSelection());\n  }, []);\n  return <div>\n      <div>\n        <button onClick={handleSelectEntireRow}>Select entire row</button>\n        <button onClick={handleSelectEntireColumn}>Select entire column</button>\n        <button onClick={handleSelectEntireWorksheet}>\n          Select entire worksheet\n        </button>\n      </div>\n      <Spreadsheet {...props} selected={selected} onSelect={handleSelect} />;\n    </div>;\n}",...ControlledSelection.parameters?.docs?.source}}},ControlledActivation.parameters={...ControlledActivation.parameters,docs:{...ControlledActivation.parameters?.docs,source:{originalSource:'props => {\n  const spreadsheetRef = React.useRef<SpreadsheetRef>();\n  const [activationPoint, setActivationPoint] = React.useState<Point>({\n    row: 0,\n    column: 0\n  });\n  const handleActivate = React.useCallback(() => {\n    spreadsheetRef.current?.activate(activationPoint);\n  }, [activationPoint]);\n  return <div>\n      <div>\n        <input id="row" title="row" type="number" value={activationPoint.row} onChange={e => setActivationPoint(() => ({\n        ...activationPoint,\n        row: Number(e.target.value)\n      }))} />\n        <input id="column" title="row" type="column" value={activationPoint.column} onChange={e => setActivationPoint(() => ({\n        ...activationPoint,\n        column: Number(e.target.value)\n      }))} />\n        <button onClick={handleActivate}>Activate</button>\n      </div>\n      <Spreadsheet ref={spreadsheetRef} {...props} />;\n    </div>;\n}',...ControlledActivation.parameters?.docs?.source}}}}}]);